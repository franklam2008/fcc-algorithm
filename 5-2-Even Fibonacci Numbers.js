function fiboEvenSum(num) {
  var ans=0;
  var arr=[1,1,2];
  var newarr=[1,1,2]
  num+=1
  const isOdd = (x) => x % 2;
  for(var i=3;i<=num;i++){
    arr[i]=arr[i-1]+arr[i-2]
    newarr[i]=arr[i-1]+arr[i-2]

    if(isOdd(arr[i])){newarr[i]=0};
  };
  newarr[0]=0;
  newarr[1]=0
  for(var j=0;j<newarr.length;j++){
    ans+=newarr[j];
  };
  console.log(ans)
  console.log(arr)
  console.log(newarr)
  return ans;
}

fiboEvenSum(23);

/*
fiboEvenSum(10) should return 188.
fiboEvenSum(23) should return 60696.
fiboEvenSum(43) should return 1485607536.
Your function is not returning the correct result using our tests values.
Your function should return an even value.
Project Euler: Problem 2: Even Fibonacci Numbers
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.*/
